// <auto-generated />
using System;
using MatrizHabilidadeDataBaseCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MatrizHabilidadeCore.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("CategoriaTipoTreinamento", b =>
                {
                    b.Property<int>("CategoriasId")
                        .HasColumnType("int");

                    b.Property<int>("TiposTreinamentoId")
                        .HasColumnType("int");

                    b.HasKey("CategoriasId", "TiposTreinamentoId");

                    b.HasIndex("TiposTreinamentoId");

                    b.ToTable("CategoriaTipoTreinamento");
                });

            modelBuilder.Entity("MaquinaTipoTreinamento", b =>
                {
                    b.Property<int>("MaquinasId")
                        .HasColumnType("int");

                    b.Property<int>("TiposTreinamentoId")
                        .HasColumnType("int");

                    b.HasKey("MaquinasId", "TiposTreinamentoId");

                    b.HasIndex("TiposTreinamentoId");

                    b.ToTable("MaquinaTipoTreinamento");
                });

            modelBuilder.Entity("MaquinaTreinamentoEspecifico", b =>
                {
                    b.Property<int>("MaquinasId")
                        .HasColumnType("int");

                    b.Property<int>("TreinamentoEspecificosId")
                        .HasColumnType("int");

                    b.HasKey("MaquinasId", "TreinamentoEspecificosId");

                    b.HasIndex("TreinamentoEspecificosId");

                    b.ToTable("MaquinaTreinamentoEspecifico");
                });

            modelBuilder.Entity("MaquinaUniorg", b =>
                {
                    b.Property<int>("MaquinasId")
                        .HasColumnType("int");

                    b.Property<int>("UniorgsId")
                        .HasColumnType("int");

                    b.HasKey("MaquinasId", "UniorgsId");

                    b.HasIndex("UniorgsId");

                    b.ToTable("MaquinaUniorg");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.AnoFiscal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AnoFiscal");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Alias")
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlantaId");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Auditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("Nota")
                        .HasColumnType("float");

                    b.Property<int>("TreinamentoEspecificoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("TreinamentoEspecificoId");

                    b.ToTable("Auditoria");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.CadastroCoordenador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CoordenadorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoordenadorId");

                    b.HasIndex("MaquinaId");

                    b.ToTable("CadastroCoordenador");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Chapa")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataAdmissao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Funcao")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsFacilitador")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.Property<int>("NivelAcesso")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int?>("UniorgId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniorgId");

                    b.ToTable("Colaborador");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.ColaboradorDisponivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("ColaboradorDisponivel");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.ConfiguracaoIntegracaoTreinamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<int>("TreinamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TreinamentoId");

                    b.ToTable("configuracaointegracaotreinamento");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.ConsoleApplicationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ErrorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Version")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ErrorId");

                    b.ToTable("consoleapplicationlog");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Coordenador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Chapa")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataAdmissao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Funcao")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.Property<int>("NivelAcesso")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Coordenador");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Error", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Exception")
                        .HasColumnType("longtext");

                    b.Property<string>("ExceptionType")
                        .HasColumnType("longtext");

                    b.Property<string>("InnerException")
                        .HasColumnType("longtext");

                    b.Property<string>("InnerExceptionType")
                        .HasColumnType("longtext");

                    b.Property<string>("InnerSource")
                        .HasColumnType("longtext");

                    b.Property<string>("InnerStackTrace")
                        .HasColumnType("longtext");

                    b.Property<string>("Source")
                        .HasColumnType("longtext");

                    b.Property<string>("StackTrace")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("error");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.EvidenciaPlanoAcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caminho")
                        .HasColumnType("longtext");

                    b.Property<int>("PlanoAcaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanoAcaoId");

                    b.ToTable("evidenciaplanoacao");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Historico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Historico");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.HistoricoCoordenador", b =>
                {
                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCorrespondente")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CoordenadorId")
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCongelamento")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("Tipo", "DataCorrespondente", "CoordenadorId", "AreaId");

                    b.HasIndex("AreaId");

                    b.HasIndex("CoordenadorId");

                    b.ToTable("HistoricoCoordenador");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.HistoricoMaquina", b =>
                {
                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCorrespondente")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataCongelamento")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("Tipo", "DataCorrespondente", "MaquinaId");

                    b.HasIndex("MaquinaId");

                    b.ToTable("HistoricoMaquina");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.IntegrationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("JSON")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("integrationlog");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Maquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<bool>("HasError")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Maquina");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.MetaTreinamentoEspecifico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Meta")
                        .HasColumnType("int");

                    b.Property<int>("TreinamentoEspecificoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("TreinamentoEspecificoId");

                    b.ToTable("MetaTreinamentoEspecifico");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.NotaTreinamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.Property<int>("TurmaTreinamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("TurmaTreinamentoId");

                    b.ToTable("NotaTreinamento");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Pergunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pergunta");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.PerguntaAuditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuditoriaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOK")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PerguntaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuditoriaId");

                    b.HasIndex("PerguntaId");

                    b.ToTable("PerguntaAuditoria");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.PlanoAcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acao")
                        .HasColumnType("longtext");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<int?>("ColaboradorResponsavelId")
                        .HasColumnType("int");

                    b.Property<int?>("CoordenadorResponsavelId")
                        .HasColumnType("int");

                    b.Property<int?>("CriadorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Prazo")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TreinamentoEspecificoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("ColaboradorResponsavelId");

                    b.HasIndex("CoordenadorResponsavelId");

                    b.HasIndex("CriadorId");

                    b.HasIndex("TreinamentoEspecificoId");

                    b.ToTable("planoacao");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PlantaBDadosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlantaBDadosId");

                    b.ToTable("Planta");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.PlantaBDados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PlantaBDados");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Retreinamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<int>("CoordenadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TreinamentoEspecificoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("CoordenadorId");

                    b.HasIndex("TreinamentoEspecificoId");

                    b.ToTable("Retreinamento");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TipoTreinamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CorFonte")
                        .HasColumnType("longtext");

                    b.Property<string>("CorTitulo")
                        .HasColumnType("longtext");

                    b.Property<string>("CorTreinamento")
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("TipoTreinamento");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Treinamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TipoTreinamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoTreinamentoId");

                    b.ToTable("Treinamento");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TreinamentoEspecifico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("TreinamentoEspecifico");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TurmaTreinamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRealizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NumeroLocalizador")
                        .HasColumnType("longtext");

                    b.Property<int>("TreinamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TreinamentoId");

                    b.ToTable("TurmaTreinamento");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TurmaTreinamentoEspecifico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRealizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NumeroLocalizador")
                        .HasColumnType("longtext");

                    b.Property<int>("TreinamentoEspecificoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TreinamentoEspecificoId");

                    b.ToTable("TurmaTreinamentoEspecifico");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TurmaTreinamentoEspecificoColaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TurmaTreinamentoEspecificoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("TurmaTreinamentoEspecificoId");

                    b.ToTable("TurmaTreinamentoEspecificoColaborador");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Uniorg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CoordenadorId")
                        .HasColumnType("int");

                    b.Property<int>("CoordenadorOriginalId")
                        .HasColumnType("int");

                    b.Property<string>("DescricaoUniorg")
                        .HasColumnType("longtext");

                    b.Property<string>("UniorgNumero")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CoordenadorId");

                    b.ToTable("Uniorg");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.UniorgMaquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<int>("UniorgId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaquinaId");

                    b.HasIndex("UniorgId");

                    b.ToTable("UniorgMaquina");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Chapa")
                        .HasColumnType("longtext");

                    b.Property<int?>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<int?>("CoordenadorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAdmissao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Funcao")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsColaborador")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsCoordenador")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.ViewTreinamento", b =>
                {
                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("CoordenadorId")
                        .HasColumnType("int");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<int>("TreinamentoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoTreinamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsOK")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Meta")
                        .HasColumnType("int");

                    b.Property<int?>("Nota")
                        .HasColumnType("int");

                    b.HasKey("PlantaId", "AreaId", "CoordenadorId", "MaquinaId", "ColaboradorId", "TreinamentoId", "TipoTreinamentoId");

                    b.ToTable("treinamento_complete");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.ViewTreinamentoEspecifico", b =>
                {
                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("CoordenadorId")
                        .HasColumnType("int");

                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<int>("TreinamentoEspecificoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAuditoria")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataTreinamento")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsNA")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsOK")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Meta")
                        .HasColumnType("int");

                    b.Property<int?>("Nota")
                        .HasColumnType("int");

                    b.HasKey("PlantaId", "AreaId", "CoordenadorId", "ColaboradorId", "MaquinaId", "TreinamentoEspecificoId");

                    b.ToTable("treinamento_especifico_complete");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CategoriaTipoTreinamento", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Categoria", null)
                        .WithMany()
                        .HasForeignKey("CategoriasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.TipoTreinamento", null)
                        .WithMany()
                        .HasForeignKey("TiposTreinamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaquinaTipoTreinamento", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Maquina", null)
                        .WithMany()
                        .HasForeignKey("MaquinasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.TipoTreinamento", null)
                        .WithMany()
                        .HasForeignKey("TiposTreinamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaquinaTreinamentoEspecifico", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Maquina", null)
                        .WithMany()
                        .HasForeignKey("MaquinasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.TreinamentoEspecifico", null)
                        .WithMany()
                        .HasForeignKey("TreinamentoEspecificosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaquinaUniorg", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Maquina", null)
                        .WithMany()
                        .HasForeignKey("MaquinasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.Uniorg", null)
                        .WithMany()
                        .HasForeignKey("UniorgsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Area", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Planta", "Planta")
                        .WithMany("Areas")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planta");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Auditoria", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Colaborador", "Colaborador")
                        .WithMany("Auditorias")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.TreinamentoEspecifico", "TreinamentoEspecifico")
                        .WithMany("Auditorias")
                        .HasForeignKey("TreinamentoEspecificoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("TreinamentoEspecifico");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.CadastroCoordenador", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Coordenador", "Coordenador")
                        .WithMany("CadastroCoordenadores")
                        .HasForeignKey("CoordenadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.Maquina", "Maquina")
                        .WithMany("CadastroCoordenadores")
                        .HasForeignKey("MaquinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coordenador");

                    b.Navigation("Maquina");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Colaborador", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Uniorg", "Uniorg")
                        .WithMany("Colaboradores")
                        .HasForeignKey("UniorgId");

                    b.Navigation("Uniorg");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.ColaboradorDisponivel", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Colaborador", "Colaborador")
                        .WithMany("ColaboradoresDisponiveis")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.ConfiguracaoIntegracaoTreinamento", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Treinamento", "Treinamento")
                        .WithMany("Configuracoes")
                        .HasForeignKey("TreinamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treinamento");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.ConsoleApplicationLog", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Error", "Error")
                        .WithMany("Logs")
                        .HasForeignKey("ErrorId");

                    b.Navigation("Error");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Coordenador", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Area", "Area")
                        .WithMany("Coordenadores")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.EvidenciaPlanoAcao", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.PlanoAcao", "PlanoAcao")
                        .WithMany()
                        .HasForeignKey("PlanoAcaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanoAcao");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.HistoricoCoordenador", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.Coordenador", "Coordenador")
                        .WithMany("HistoricoCoordenadores")
                        .HasForeignKey("CoordenadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Coordenador");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.HistoricoMaquina", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Maquina", "Maquina")
                        .WithMany("HistoricoMaquinas")
                        .HasForeignKey("MaquinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Maquina");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Maquina", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Area", "Area")
                        .WithMany("Maquinas")
                        .HasForeignKey("AreaId");

                    b.HasOne("MatrizHabilidadeDatabase.Models.Categoria", "Categoria")
                        .WithMany("Maquinas")
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Area");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.MetaTreinamentoEspecifico", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Colaborador", "Colaborador")
                        .WithMany("MetasAuditoria")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.TreinamentoEspecifico", "TreinamentoEspecifico")
                        .WithMany("MetasAuditoria")
                        .HasForeignKey("TreinamentoEspecificoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("TreinamentoEspecifico");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.NotaTreinamento", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Colaborador", "Colaborador")
                        .WithMany("NotasTreinamento")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.TurmaTreinamento", "TurmaTreinamento")
                        .WithMany("Notas")
                        .HasForeignKey("TurmaTreinamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("TurmaTreinamento");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.PerguntaAuditoria", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Auditoria", "Auditoria")
                        .WithMany("Perguntas")
                        .HasForeignKey("AuditoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.Pergunta", "Pergunta")
                        .WithMany("Perguntas")
                        .HasForeignKey("PerguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auditoria");

                    b.Navigation("Pergunta");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.PlanoAcao", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Colaborador", "Colaborador")
                        .WithMany("PlanosAcoes")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.Colaborador", "ColaboradorResponsavel")
                        .WithMany("PlanosAcaoResponsavel")
                        .HasForeignKey("ColaboradorResponsavelId");

                    b.HasOne("MatrizHabilidadeDatabase.Models.Coordenador", "CoordenadorResponsavel")
                        .WithMany("ResponsavelPlanosAcao")
                        .HasForeignKey("CoordenadorResponsavelId");

                    b.HasOne("MatrizHabilidadeDatabase.Models.Coordenador", "Criador")
                        .WithMany("CriadorPlanosAcao")
                        .HasForeignKey("CriadorId");

                    b.HasOne("MatrizHabilidadeDatabase.Models.TreinamentoEspecifico", "TreinamentoEspecifico")
                        .WithMany("PlanosAcao")
                        .HasForeignKey("TreinamentoEspecificoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("ColaboradorResponsavel");

                    b.Navigation("CoordenadorResponsavel");

                    b.Navigation("Criador");

                    b.Navigation("TreinamentoEspecifico");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Planta", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.PlantaBDados", "PlantaBDados")
                        .WithMany("Plantas")
                        .HasForeignKey("PlantaBDadosId");

                    b.Navigation("PlantaBDados");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Retreinamento", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Colaborador", "Colaborador")
                        .WithMany("Retreinamentos")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.Coordenador", "Coordenador")
                        .WithMany("Retreinamentos")
                        .HasForeignKey("CoordenadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.TreinamentoEspecifico", "TreinamentoEspecifico")
                        .WithMany("Retreinamentos")
                        .HasForeignKey("TreinamentoEspecificoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Coordenador");

                    b.Navigation("TreinamentoEspecifico");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Treinamento", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.TipoTreinamento", "TipoTreinamento")
                        .WithMany("Treinamentos")
                        .HasForeignKey("TipoTreinamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoTreinamento");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TreinamentoEspecifico", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Categoria", "Categoria")
                        .WithMany("TreinamentoEspecificos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TurmaTreinamento", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Treinamento", "Treinamento")
                        .WithMany("TurmasTreinamento")
                        .HasForeignKey("TreinamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Treinamento");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TurmaTreinamentoEspecifico", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.TreinamentoEspecifico", "TreinamentoEspecifico")
                        .WithMany("TurmasTreinamentos")
                        .HasForeignKey("TreinamentoEspecificoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TreinamentoEspecifico");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TurmaTreinamentoEspecificoColaborador", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Colaborador", "Colaborador")
                        .WithMany("TurmasTreinamentoEspecifico")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.TurmaTreinamentoEspecifico", "TurmaTreinamentoEspecifico")
                        .WithMany("TurmaColaboradores")
                        .HasForeignKey("TurmaTreinamentoEspecificoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("TurmaTreinamentoEspecifico");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Uniorg", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Coordenador", "Coordenador")
                        .WithMany("Uniorgs")
                        .HasForeignKey("CoordenadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coordenador");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.UniorgMaquina", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Maquina", "Maquina")
                        .WithMany()
                        .HasForeignKey("MaquinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.Uniorg", "Uniorg")
                        .WithMany()
                        .HasForeignKey("UniorgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Maquina");

                    b.Navigation("Uniorg");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrizHabilidadeDatabase.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MatrizHabilidadeDatabase.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Area", b =>
                {
                    b.Navigation("Coordenadores");

                    b.Navigation("Maquinas");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Auditoria", b =>
                {
                    b.Navigation("Perguntas");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Categoria", b =>
                {
                    b.Navigation("Maquinas");

                    b.Navigation("TreinamentoEspecificos");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Colaborador", b =>
                {
                    b.Navigation("Auditorias");

                    b.Navigation("ColaboradoresDisponiveis");

                    b.Navigation("MetasAuditoria");

                    b.Navigation("NotasTreinamento");

                    b.Navigation("PlanosAcaoResponsavel");

                    b.Navigation("PlanosAcoes");

                    b.Navigation("Retreinamentos");

                    b.Navigation("TurmasTreinamentoEspecifico");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Coordenador", b =>
                {
                    b.Navigation("CadastroCoordenadores");

                    b.Navigation("CriadorPlanosAcao");

                    b.Navigation("HistoricoCoordenadores");

                    b.Navigation("ResponsavelPlanosAcao");

                    b.Navigation("Retreinamentos");

                    b.Navigation("Uniorgs");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Error", b =>
                {
                    b.Navigation("Logs");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Maquina", b =>
                {
                    b.Navigation("CadastroCoordenadores");

                    b.Navigation("HistoricoMaquinas");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Pergunta", b =>
                {
                    b.Navigation("Perguntas");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Planta", b =>
                {
                    b.Navigation("Areas");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.PlantaBDados", b =>
                {
                    b.Navigation("Plantas");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TipoTreinamento", b =>
                {
                    b.Navigation("Treinamentos");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Treinamento", b =>
                {
                    b.Navigation("Configuracoes");

                    b.Navigation("TurmasTreinamento");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TreinamentoEspecifico", b =>
                {
                    b.Navigation("Auditorias");

                    b.Navigation("MetasAuditoria");

                    b.Navigation("PlanosAcao");

                    b.Navigation("Retreinamentos");

                    b.Navigation("TurmasTreinamentos");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TurmaTreinamento", b =>
                {
                    b.Navigation("Notas");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.TurmaTreinamentoEspecifico", b =>
                {
                    b.Navigation("TurmaColaboradores");
                });

            modelBuilder.Entity("MatrizHabilidadeDatabase.Models.Uniorg", b =>
                {
                    b.Navigation("Colaboradores");
                });
#pragma warning restore 612, 618
        }
    }
}
